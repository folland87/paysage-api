openapi: 3.1.0
info:
  title: Persons
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /persons:
    get:
      summary: Get an array of persons
      tags:
        - Persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Person.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersons
      parameters: []
      description: ''
    post:
      summary: Create a person
      operationId: createPerson
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Person.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Person.yaml
      tags:
        - Persons
  '/persons/{personID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person
      tags:
        - Persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Person.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPerson
      description: Retrieve the information of the Person with the matching user ID.
    patch:
      summary: Update a person
      operationId: updatePerson
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: ./models/Person.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Person.yaml
      tags:
        - Persons
    delete:
      summary: Delete a person
      operationId: deletePerson
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Persons
  '/persons/{personID}/identifiers':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person's identifiers
      tags:
        - Identifiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Identifier.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersonsIdentifiers
    post:
      summary: Create a person's identifier
      operationId: createPersonsIdentifier
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Identifier.yaml
      tags:
        - Identifiers
  '/persons/{personID}/identifiers/{identifierID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
      - schema:
          type: string
        name: identifierID
        in: path
        required: true
    get:
      summary: Get a person's indifier
      tags:
        - Identifiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPersonsIdentifier
    patch:
      summary: Update a person's identifier
      operationId: updatePersonsIdentifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Identifier.yaml
      tags:
        - Identifiers
    delete:
      summary: Delete a person's identifier
      operationId: deletegetPersonsIdentifier
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Identifiers
  '/persons/{personID}/websites':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person's websites
      tags:
        - Websites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Websites.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersonsWebsites
    post:
      summary: Create a person's website
      operationId: createPersonsWebsite
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Websites.yaml
      tags:
        - Websites
  '/persons/{personID}/websites/{websiteID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
      - schema:
          type: string
        name: websiteID
        in: path
        required: true
    get:
      summary: Get a person's website
      tags:
        - Websites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPersonsWebsite
    patch:
      summary: Update a person's website
      operationId: updatePersonsWebsite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Websites.yaml
      tags:
        - Websites
    delete:
      summary: Delete a person's website
      operationId: deletePersonsWebsite
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Websites
  '/persons/{personID}/socials':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person's social medias
      tags:
        - SocialMedias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/SocialMedia.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersonsSocialMedias
    post:
      summary: Create a person's social media
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/SocialMedia.yaml
      tags:
        - SocialMedias
      operationId: createPersonsSocialMedias
  '/persons/{personID}/socials/{socialID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
      - schema:
          type: string
        name: socialID
        in: path
        required: true
    get:
      summary: Get a person's social media
      tags:
        - SocialMedias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPersonsSocialMedia
    patch:
      summary: Update a person's social media
      operationId: updatePersonsSocialMedia
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/SocialMedia.yaml
      tags:
        - SocialMedias
    delete:
      summary: Delete a person's social media
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - SocialMedias
      operationId: deletePersonsSocialMedia
  '/persons/{personID}/positions':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person's positions
      tags:
        - Positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/PositionEdge.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersonsPositions
    post:
      summary: Create a person's position
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/PositionEdge.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PositionEdge.yaml
      tags:
        - Positions
      operationId: createPersonsPosition
  '/persons/{personID}/positions/{positionID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
      - schema:
          type: string
        name: socialID
        in: path
        required: true
    get:
      summary: Get a person's position
      tags:
        - Positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/PositionEdge.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPersonsPosition
    patch:
      summary: Update a person's position
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/PositionEdge.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PositionEdge.yaml
      tags:
        - Positions
      operationId: updatePersonsPosition
    delete:
      summary: Delete a person's position
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Positions
      operationId: deletePersonsPosition
  '/persons/{personID}/prices':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a person's prices
      tags:
        - Prices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/PriceEdge.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listPersonsPrices
    post:
      summary: Create a person's price
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/PriceEdge.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PriceEdge.yaml
      tags:
        - Prices
      operationId: createPersonsPrice
  '/persons/{personID}/prices/{priceID}':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
      - schema:
          type: string
        name: socialID
        in: path
        required: true
    get:
      summary: Get a person's price
      tags:
        - Prices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/PriceEdge.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getPersonsPrice
    patch:
      summary: Update a person's price
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/PriceEdge.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/PriceEdge.yaml
      tags:
        - Prices
      operationId: updatePersonsPrice
    delete:
      summary: Delete a person's price
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Prices
      operationId: deletePersonsPrice
components:
  schemas: {}
  responses:
    Error:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/Error.yaml
tags:
  - name: Identifiers
  - name: Persons
  - name: Positions
  - name: Prices
  - name: SocialMedias
  - name: Websites
