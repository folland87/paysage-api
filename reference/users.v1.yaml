openapi: 3.0.1
info:
  title: User Management
  license:
    name: MIT
    url: 'https://github.com/dataesr/paysage/LICENCE.md'
  version: 1.0.0
servers:
  - url: 'http://localhost:4000/api'
paths:
  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Sign a user in
      description: A signin route that returns a token.
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signinPayload'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: signin
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign a user up
      description: Create a user account
      requestBody:
        description: Required user info for account creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signupPayload'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: signup
  /auth/activate:
    get:
      tags:
        - Authentication
      summary: Reads a token to confirm user's account
      parameters:
        - name: email
          in: query
          description: User email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User account activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: sendActivationCode
    post:
      summary: ''
      operationId: activateAccount
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
  /auth/reset:
    post:
      summary: ''
      operationId: resetPassord
      responses:
        '200':
          description: OK
    get:
      summary: ''
      operationId: sendResetPassordCode
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: query
          name: email
          description: User email
  /me:
    patch:
      tags:
        - Me
      summary: Update user infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Me.yaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Me.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: updateMe
    delete:
      tags:
        - Me
      summary: delete user account
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: deleteMe
    get:
      tags:
        - Me
      summary: Get current user
      responses:
        '200':
          description: User infos
          content:
            application/json:
              schema:
                $ref: ./models/Me.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getMe
components:
  schemas:
    signinPayload:
      type: object
      properties:
        password:
          type: string
          pattern: '^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&:_])[A-Za-z\d@$!%*#?&]{8,}$'
          description: 'Minimum eight characters, at least one letter, one number and one special character'
        account:
          type: string
          description: Email or username
      required:
        - password
        - account
      x-internal: true
    signResponse:
      type: object
      properties:
        token:
          type: string
          description: User token to use for subsequent requests
      x-internal: true
    signupPayload:
      title: signupPayload
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - username
        - email
        - password
      x-internal: true
  responses:
    Error:
      description: Example response
      content:
        application/json:
          schema:
            $ref: ./models/Error.yaml
