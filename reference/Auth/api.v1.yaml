openapi: 3.0.1
info:
  title: Authentication API.
  description: Authentication API.
  termsOfService: ''
  contact:
    email: frederic.olland@enseignementsup.gouv.fr
  license:
    name: MIT
    url: 'https://github.com/dataesr/paysage/LICENCE.md'
  version: 1.0.0
servers:
  - url: 'https://paysage.staging.dataesr.ovh/api'
  - url: 'http://paysage.staging.dataesr.ovh/api'
tags:
  - name: auth
    description: Authentication service
paths:
  /auth/signin:
    post:
      tags:
        - auth
      summary: Sign a user in
      description: A signin route that returns a token.
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignIn'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userToken'
        '400':
          description: BadRequest
          content: {}
        '500':
          description: ServerError
          content: {}
  /auth/recover-password:
    post:
      tags:
        - auth
      summary: Ask for password recovery email
      description: Sends an email with a token to recover user's password
      requestBody:
        description: Required user email for sending the recover-password link
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmail'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: BadRequest
          content: {}
  '/auth/reset-password/{token}':
    get:
      tags:
        - auth
      summary: Reset password
      description: Validate new password for user providing valid token
      parameters:
        - name: token
          in: path
          description: A token sent by email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmail'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: BadRequest
          content: {}
  /auth/resend-confirm-account-email:
    post:
      tags:
        - auth
      summary: Ask for resending an account confirmation email
      description: Send an email with a token to confirm user's account
      requestBody:
        description: Required user email for sending the activate-account link
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userEmail'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: BadRequest
          content: {}
  /auth/signup:
    post:
      tags:
        - auth
      summary: Sign a user up
      description: Create a user account
      requestBody:
        description: Required user info for account creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignUp'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: BadRequest
          content: {}
  '/auth/activate-account/{token}':
    get:
      tags:
        - auth
      summary: Reads a token to confirm user's account
      parameters:
        - name: token
          in: path
          description: A token sent by email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User account activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: Invalid token
          content: {}
        '404':
          description: User not found
          content: {}
components:
  schemas:
    userEmail:
      type: object
      properties:
        email:
          type: string
    userToken:
      type: object
      properties:
        token:
          type: string
    message:
      type: object
      properties:
        message:
          type: string
    user:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    userSignIn:
      required:
        - password
      type: object
      properties:
        account:
          type: string
          example: folland87 or folland@dataesr.ovh
        password:
          type: string
          example: password
    userSignUp:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: folland87
        password:
          type: string
          example: password
        email:
          type: string
          example: folland@dataesr.ovh
