openapi: 3.1.0
info:
  title: Authentication
  description: Authentication.
  termsOfService: ''
  contact:
    email: frederic.olland@enseignementsup.gouv.fr
  license:
    name: MIT
    url: 'https://github.com/dataesr/paysage/LICENCE.md'
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
    description: development
  - url: 'https://api.paysage.staging.dataesr.ovh'
    description: staging
  - url: 'https://api.paysage.dataesr.ovh'
    description: production
  - description: mock
    url: 'https://docs.paysage.dataesr.ovh/mocks/dataesr/paysage-api/75539'
paths:
  /auth/signin:
    post:
      summary: Sign a user in
      description: A signin route that returns a token that represent user info.
      requestBody:
        description: User credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignIn'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/signInResponse'
        '401':
          description: Unauthorized
        '500':
          description: ServerError
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
      operationId: signIn
  /auth/recover:
    post:
      summary: Recover password
      description: Sends an email with a token to recover user's password
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
        '500':
          description: ServerError
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
      operationId: sendPassordRecoveryCode
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: User's secret code
    parameters: []
  /auth/signup:
    post:
      summary: Sign a user up
      description: Create a user account
      requestBody:
        description: Required user info for account creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSignUp'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
        '500':
          description: ServerError
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
      operationId: signUp
  /auth/activate:
    parameters: []
    get:
      summary: ''
      operationId: sendActivationCode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      description: Sends an account activation code.
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: User's secret code
  /auth/mail:
    post:
      summary: ''
      operationId: mailUser
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../Structures/models/Error.yaml
      description: sendMailToUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                action:
                  type: string
                  enum:
                    - activate
                    - recover
components:
  schemas:
    userSignIn:
      type: object
      properties:
        account:
          type: string
          example: folland87 or folland@dataesr.ovh
          description: Username or email address
        password:
          type: string
          example: password
      required:
        - account
        - password
    userSignUp:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: folland87
        password:
          type: string
          example: password
        email:
          type: string
          example: folland@dataesr.ovh
  securitySchemes:
    Bearer JWT:
      type: http
      scheme: bearer
  responses:
    signInResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
          examples:
            example-1:
              $ref: '#/components/examples/token-1'
  examples:
    user-1:
      value:
        description: Example shared example
        type: object
        properties:
          id:
            type: string
        required:
          - id
    token-1:
      value:
        token: hufiphupHDUZPQhfe65876NUINLCJL.cenuivvnjm846dzqedddeedscDFE
