openapi: 3.1.0
info:
  title: Structures
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /structures:
    get:
      summary: Get structures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Structure.yaml
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructures
      description: Get an array of structures.
      parameters: []
      tags:
        - Structures
    post:
      summary: Create a structure
      operationId: createStructure
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Structure.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      description: Create a new structure.
      tags:
        - Structures
    parameters: []
  '/structures/{structureID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get a structure
      tags:
        - Structures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Structure.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructure
      description: Get a structure by ID.
      parameters: []
    patch:
      summary: Update a structure
      operationId: updateStructure
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Structure.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      description: Modify a structure by ID.
      tags:
        - Structures
    delete:
      summary: Delete structure
      operationId: deleteStructure
      description: Delete a structure by ID.
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Structures
  '/structures/{structureID}/names':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get a structure's name
      tags:
        - Names
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/StructureNames.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresNames
    post:
      summary: Create a structure's name
      operationId: createStructuresName
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/StructureNames.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/StructureNames.yaml
      tags:
        - Names
  '/structures/{structureID}/names/{nameID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
      - schema:
          type: string
        name: nameID
        in: path
        required: true
    get:
      summary: Get a structure's name
      tags:
        - Names
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/StructureNames.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresName
    patch:
      summary: Update a structure's name
      operationId: updateStructuresName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/StructureNames.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Names
    delete:
      summary: Delete a structure's name
      operationId: deleteStructuresName
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Names
  '/structures/{structureID}/logos':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get structure's logos
      tags:
        - Logos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Logo.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresLogos
    post:
      summary: Create a logo
      operationId: createStructuresLogo
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Logo.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Logo.yaml
      tags:
        - Logos
  '/structures/{structureID}/logos/{logoID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
      - schema:
          type: string
        name: logoID
        in: path
        required: true
    get:
      summary: Get a structure's logo
      tags:
        - Logos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Logo.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresLogo
    patch:
      summary: Update a structure's logo
      operationId: updateStructuresLogo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Logo.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Logo.yaml
      tags:
        - Logos
    delete:
      summary: Delete a structure's logo
      operationId: deleteStructuresLogo
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Logos
  '/structures/{structureID}/addresses':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get structure's addresses
      tags:
        - Addresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Address.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresAddresses
    post:
      summary: Create a structure's addresse
      operationId: createStructuresAddress
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Address.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Address.yaml
      tags:
        - Addresses
  '/structures/{structuresID}/addresses/{addressID}':
    parameters:
      - schema:
          type: string
        name: structuresID
        in: path
        required: true
      - schema:
          type: string
        name: addressID
        in: path
        required: true
    get:
      summary: Get a structure's address
      tags:
        - Addresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Address.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresAddress
    patch:
      summary: Update a structure's address
      operationId: updateStructuresAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Address.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Addresses
    delete:
      summary: Delete a structure's address
      operationId: deleteStructuresAddress
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Addresses
  '/structures/{structureID}/identifiers':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get a structure's identifiers
      tags:
        - Identifiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Identifier.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresIdentifiers
    post:
      summary: Create a structure's identifier
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Identifier.yaml
      tags:
        - Identifiers
      operationId: createStructuresIdentifier
  '/structures/{structureID}/identifiers/{identifierID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
      - schema:
          type: string
        name: identifierID
        in: path
        required: true
    get:
      summary: Get a structure's indifier
      tags:
        - Identifiers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresIdentifier
    patch:
      summary: Update a structure's identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Identifier.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Identifier.yaml
      tags:
        - Identifiers
      operationId: updateStructuresIdentifier
    delete:
      summary: Delete a structure's identifier
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Identifiers
      operationId: deleteStructuresIdentifier
  '/structures/{structureID}/websites':
    parameters:
      - schema:
          type: string
        name: personID
        in: path
        required: true
    get:
      summary: Get a structure's websites
      tags:
        - Websites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Websites.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresWebsites
    post:
      summary: Create a structure's website
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Websites.yaml
      tags:
        - Websites
      operationId: createStructuresWebsite
  '/structures/{structureID}/websites/{websiteID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
      - schema:
          type: string
        name: websiteID
        in: path
        required: true
    get:
      summary: Get a structure's website
      tags:
        - Websites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresWebsite
    patch:
      summary: Update a structure's website
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Websites.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Websites.yaml
      tags:
        - Websites
      operationId: updateStructuresWebsite
    delete:
      summary: Delete a structure's website
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Websites
      operationId: deleteStructuresWebsite
  '/structures/{structureID}/socials':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
    get:
      summary: Get a structure's social medias
      tags:
        - SocialMedias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/SocialMedia.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: listStructuresSocialMedias
    post:
      summary: Create a structure's social media
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/SocialMedia.yaml
      tags:
        - SocialMedias
      operationId: createStructuresSocialMedia
  '/structures/{structureID}/socials/{socialID}':
    parameters:
      - schema:
          type: string
        name: structureID
        in: path
        required: true
      - schema:
          type: string
        name: socialID
        in: path
        required: true
    get:
      summary: Get a structure's social media
      tags:
        - SocialMedias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      operationId: getStructuresSocialMedia
    patch:
      summary: Update a structure's social media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/SocialMedia.yaml
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/SocialMedia.yaml
      tags:
        - SocialMedias
      operationId: updateStructuresSocialMedia
    delete:
      summary: Delete a structure's social media
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - SocialMedias
      operationId: deleteStructuresSocialMedia
components:
  schemas: {}
  parameters: {}
  examples: {}
  responses:
    Error:
      description: Error response.
      content:
        application/json:
          schema:
            $ref: ./models/Error.yaml
tags:
  - name: Addresses
  - name: Categories
  - name: Identifiers
  - name: Logos
  - name: Names
  - name: SocialMedias
  - name: Structures
  - name: Weblinks
